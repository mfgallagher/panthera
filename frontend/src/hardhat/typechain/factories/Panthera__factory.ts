/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Panthera } from "../Panthera";

export class Panthera__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Panthera> {
    return super.deploy(_tokenContract, overrides || {}) as Promise<Panthera>;
  }
  getDeployTransaction(
    _tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenContract, overrides || {});
  }
  attach(address: string): Panthera {
    return super.attach(address) as Panthera;
  }
  connect(signer: Signer): Panthera__factory {
    return super.connect(signer) as Panthera__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Panthera {
    return new Contract(address, _abi, signerOrProvider) as Panthera;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Granola",
        name: "_tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Sell",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numberOfTokens",
        type: "uint256",
      },
    ],
    name: "distributeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract Granola",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104743803806104748339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028190555050610397806100dd6000396000f3fe6080604052600436106100345760003560e01c806355a373d6146100395780637366794e1461007a5780637ff9b596146100a8575b600080fd5b34801561004557600080fd5b5061004e6100d3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100a66004803603602081101561009057600080fd5b81019080803590602001909291905050506100f9565b005b3480156100b457600080fd5b506100bd61032f565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61010581600254610335565b341461011057600080fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d60208110156101e457600080fd5b8101908080519060200190929190505050101561020057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b505050506040513d60208110156102bd57600080fd5b81019080805190602001909291905050506102d757600080fd5b7f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df093382604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b60025481565b600080821480610352575082828385029250828161034f57fe5b04145b61035b57600080fd5b9291505056fea2646970667358221220d449fadd106a6faff106e7933c5e4c5ba48b50b625e95adbee397baedf5eb75f64736f6c63430007030033";
